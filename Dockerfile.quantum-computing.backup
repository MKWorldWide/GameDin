FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install dependencies for quantum computing
RUN npm install -g typescript && npm install express cors @types/node @types/express @types/cors

# Copy quantum infrastructure
COPY quantum-infrastructure/ ./quantum-infrastructure/

# Create tsconfig.json for compilation
RUN echo '{"compilerOptions":{"target":"ES2020","module":"commonjs","outDir":"./dist","rootDir":"./quantum-infrastructure","strict":false,"esModuleInterop":true,"skipLibCheck":true,"forceConsistentCasingInFileNames":true,"noImplicitAny":false}}' > tsconfig.json

# Compile TypeScript to JavaScript
RUN tsc

# Debug: Show detailed directory structure
RUN echo "=== FULL DIRECTORY STRUCTURE ===" && ls -la /app
RUN echo "=== DIST DIRECTORY ===" && ls -la /app/dist
RUN echo "=== QUANTUM-INFRASTRUCTURE DIRECTORY ===" && ls -la /app/quantum-infrastructure
RUN echo "=== RECURSIVE DIST LISTING ===" && find /app/dist -type f -name "*.js" 2>/dev/null || echo "No .js files found in dist"

# Create a simple package.json for quantum computing
RUN echo '{"name":"quantum-computing","version":"5.0.2","main":"dist/quantumServer.js","scripts":{"start":"node dist/quantumServer.js"}}' > package.json

# Expose quantum computing port
EXPOSE 9090

# Start quantum computing server
CMD ["node", "dist/quantumServer.js"] 