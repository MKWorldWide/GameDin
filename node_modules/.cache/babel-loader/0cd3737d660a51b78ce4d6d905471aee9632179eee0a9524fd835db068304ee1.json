{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunny\\\\Saved Games\\\\Web Application\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const login = useCallback(async (email, password) => {\n    try {\n      // Replace with actual API call\n      const mockUser = {\n        username: email.split('@')[0],\n        email\n      };\n      setUser(mockUser);\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  }, []);\n  const register = useCallback(async (username, email, password) => {\n    try {\n      // Replace with actual API call\n      const mockUser = {\n        username,\n        email\n      };\n      setUser(mockUser);\n    } catch (error) {\n      throw new Error('Registration failed');\n    }\n  }, []);\n  const logout = useCallback(() => {\n    setUser(null);\n  }, []);\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"S3tef9YdxAu9TJt3VPJcLYzQAv4=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","login","email","password","mockUser","username","split","error","register","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sunny/Saved Games/Web Application/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\ninterface User {\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const login = useCallback(async (email: string, password: string) => {\n    try {\n      // Replace with actual API call\n      const mockUser = {\n        username: email.split('@')[0],\n        email,\n      };\n      setUser(mockUser);\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  }, []);\n\n  const register = useCallback(async (username: string, email: string, password: string) => {\n    try {\n      // Replace with actual API call\n      const mockUser = {\n        username,\n        email,\n      };\n      setUser(mockUser);\n    } catch (error) {\n      throw new Error('Registration failed');\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    setUser(null);\n  }, []);\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAehF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMe,KAAK,GAAGd,WAAW,CAAC,OAAOe,KAAa,EAAEC,QAAgB,KAAK;IACnE,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG;QACfC,QAAQ,EAAEH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7BJ;MACF,CAAC;MACDF,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAM,IAAIZ,KAAK,CAAC,cAAc,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,QAAQ,GAAGrB,WAAW,CAAC,OAAOkB,QAAgB,EAAEH,KAAa,EAAEC,QAAgB,KAAK;IACxF,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG;QACfC,QAAQ;QACRH;MACF,CAAC;MACDF,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAM,IAAIZ,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,MAAM,GAAGtB,WAAW,CAAC,MAAM;IAC/Ba,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG;IACZX,IAAI;IACJY,eAAe,EAAE,CAAC,CAACZ,IAAI;IACvBE,KAAK;IACLO,QAAQ;IACRC;EACF,CAAC;EAED,oBAAOpB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAb,QAAA,EAAEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAClB,GAAA,CA1CWF,YAAyC;AAAAqB,EAAA,GAAzCrB,YAAyC;AA4CtD,eAAeN,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}