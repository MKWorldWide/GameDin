name: GameDin
enableBranchAutoBuild: true
environmentVariables:
  AMPLIFY_MONOREPO_APP_ROOT: frontend
  NODE_OPTIONS: --max-old-space-size=8192
  NODE_ENV: production
  NODE_VERSION: 20
  REDIS_TLS_ENABLED: true
  REDIS_CLUSTER_MODE: true
  VITE_APP_ENV: production
  VITE_API_URL: ${API_URL}
  VITE_WS_URL: ${WS_URL}
  VITE_AMPLIFY_VERSION: gen2
  VITE_APP_VERSION: 4.0.0
  VITE_AWS_REGION: ${AWS_REGION}
  VITE_DEPLOYMENT_STAGE: production
  VITE_OPTIMIZATION_LEVEL: ultra
  VITE_PERFORMANCE_MONITORING: true
  VITE_ERROR_REPORTING: true
  VITE_ANALYTICS_ENABLED: true

backend:
  phases:
    preBuild:
      commands:
        - npm ci --prefer-offline --no-audit
        - npm install -g @aws-amplify/cli@latest
        - npm cache clean --force
        - echo "Backend optimization: Starting pre-build phase"
    build:
      commands:
        - amplify push --yes
        - echo "Backend optimization: Amplify resources deployed"
        - npm run build:backend
        - echo "Backend optimization: Build completed"
    postBuild:
      commands:
        - npm run test:backend
        - npm run security:scan
        - echo "Backend optimization: Post-build validation completed"
  artifacts:
    baseDirectory: amplify/backend
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - ~/.npm/**/*
      - .amplify/**/*

frontend:
  phases:
    preBuild:
      commands:
        - cd frontend
        - npm ci --prefer-offline --no-audit
        - npm cache clean --force
        - npm run type-check
        - echo "Frontend optimization: Pre-build phase completed"
    build:
      commands:
        - npm run build:optimized
        - npm run analyze:bundle
        - echo "Frontend optimization: Build phase completed"
    postBuild:
      commands:
        - npm run test:ci
        - npm run lighthouse:ci
        - npm run security:audit
        - npm run post-deploy:hooks
        - echo "Frontend optimization: Post-build phase completed"
  artifacts:
    baseDirectory: frontend/dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - frontend/node_modules/**/*
      - frontend/.next/cache/**/*
      - .npm-cache/**/*
      - frontend/dist/.cache/**/*

test:
  phases:
    test:
      commands:
        - cd frontend && npm run test:ci -- --coverage --watchAll=false
        - cd frontend && npm run test:e2e:ci
        - cd frontend && npm run performance:test
  artifacts:
    baseDirectory: frontend/coverage
    files:
      - '**/*'
    configFilePath: '**/jest-*.json'

customHeaders:
  - pattern: '**/*'
    headers:
      - key: Strict-Transport-Security
        value: max-age=31536000; includeSubDomains; preload
      - key: X-Frame-Options
        value: DENY
      - key: X-Content-Type-Options
        value: nosniff
      - key: X-XSS-Protection
        value: 1; mode=block
      - key: Referrer-Policy
        value: strict-origin-when-cross-origin
      - key: Permissions-Policy
        value: camera=(), microphone=(), geolocation=(), interest-cohort=()
      - key: Content-Security-Policy
        value: "default-src 'self'; connect-src 'self' https://*.amazonaws.com https://*.amazoncognito.com https://*.cloudfront.net; img-src 'self' data: https: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.amazonaws.com https://*.cloudfront.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;"
      - key: X-DNS-Prefetch-Control
        value: on
      - key: X-Permitted-Cross-Domain-Policies
        value: none
      - key: X-Download-Options
        value: noopen
      - key: X-Requested-With
        value: XMLHttpRequest
  - pattern: '**/*.js'
    headers:
      - key: Cache-Control
        value: 'public, max-age=31536000, immutable'
      - key: Content-Encoding
        value: gzip
  - pattern: '**/*.css'
    headers:
      - key: Cache-Control
        value: 'public, max-age=31536000, immutable'
      - key: Content-Encoding
        value: gzip
  - pattern: '**/*.{png,jpg,jpeg,gif,svg,webp}'
    headers:
      - key: Cache-Control
        value: 'public, max-age=31536000, immutable'
      - key: Content-Encoding
        value: gzip
  - pattern: '**/*.{woff2,woff,ttf,eot}'
    headers:
      - key: Cache-Control
        value: 'public, max-age=31536000, immutable'
      - key: Content-Encoding
        value: gzip
  - pattern: '*.html'
    headers:
      - key: Cache-Control
        value: no-cache, must-revalidate
      - key: Content-Encoding
        value: gzip
  - pattern: '/index.html'
    headers:
      - key: Cache-Control
        value: no-store, must-revalidate
      - key: Content-Encoding
        value: gzip
  - pattern: '/assets/*'
    headers:
      - key: Cache-Control
        value: public, max-age=31536000, immutable
      - key: Content-Encoding
        value: gzip
  - pattern: '/api/*'
    headers:
      - key: Cache-Control
        value: no-cache, must-revalidate
      - key: Access-Control-Allow-Origin
        value: '*'
      - key: Access-Control-Allow-Methods
        value: 'GET, POST, PUT, DELETE, OPTIONS'
      - key: Access-Control-Allow-Headers
        value: 'Content-Type, Authorization, X-Requested-With'

performance:
  maxConcurrentUsers: 5000
  autoscaling:
    computeType: large
    minSize: 2
    maxSize: 20
    targetUtilization: 70
    scaleUpCooldown: 300
    scaleDownCooldown: 600
  caching:
    ttl: 7200
    queryStringBehavior: ignore
    cookieBehavior: none
    headerBehavior: whitelist
    whitelistedHeaders:
      - Authorization
      - X-Requested-With
      - X-API-Key
  compression:
    enabled: true
    types:
      - text/html
      - text/css
      - text/javascript
      - application/javascript
      - application/json
      - application/xml
      - image/svg+xml
      - font/woff2
      - font/woff
      - font/ttf
  optimization:
    enabled: true
    minify:
      html: true
      css: true
      js: true
    bundle:
      enabled: true
      splitting: true
      treeShaking: true
    images:
      optimization: true
      formats:
        - webp
        - avif
      quality: 85
      progressive: true

security:
  enableWAF: true
  wafRules:
    - name: AWSManagedRulesCommonRuleSet
      priority: 1
      overrideAction: none
    - name: AWSManagedRulesKnownBadInputsRuleSet
      priority: 2
      overrideAction: none
    - name: AWSManagedRulesSQLiRuleSet
      priority: 3
      overrideAction: none
    - name: AWSManagedRulesLinuxRuleSet
      priority: 4
      overrideAction: none
    - name: AWSManagedRulesWindowsRuleSet
      priority: 5
      overrideAction: none
    - name: RateLimit
      priority: 6
      action: block
      rateLimit:
        limit: 5000
        aggregateBy: IP
        timeWindow: 300
    - name: GeoBlock
      priority: 7
      action: block
      geoMatch:
        countryCodes: ['CN', 'RU', 'KP']
    - name: BadBots
      priority: 8
      action: block
      botControl:
        mode: VERIFY
  enableShieldAdvanced: true
  enableGuardDuty: true
  enableSecurityHub: true
  enableDDoSProtection: true
  enableInspector: true
  enableConfig: true
  enableCloudTrail: true
  enableVPCFlowLogs: true
  enableAccessAnalyzer: true
  enableMacie: true
  enableIAMAccessAnalyzer: true

monitoring:
  alerts:
    - name: HighErrorRate
      metric: 5XXError
      threshold: 2
      evaluationPeriods: 2
      period: 300
      statistic: Average
      comparison: GreaterThanThreshold
      notifyEmail: alerts@gamedin.com
      notifySMS: +1234567890
    - name: HighLatency
      metric: Latency
      threshold: 500
      evaluationPeriods: 2
      period: 300
      statistic: Average
      comparison: GreaterThanThreshold
      notifyEmail: alerts@gamedin.com
    - name: HighCPUUtilization
      metric: CPUUtilization
      threshold: 75
      evaluationPeriods: 2
      period: 300
      statistic: Average
      comparison: GreaterThanThreshold
      notifyEmail: alerts@gamedin.com
    - name: HighMemoryUtilization
      metric: MemoryUtilization
      threshold: 80
      evaluationPeriods: 2
      period: 300
      statistic: Average
      comparison: GreaterThanThreshold
      notifyEmail: alerts@gamedin.com
    - name: LowAvailability
      metric: Availability
      threshold: 99.5
      evaluationPeriods: 2
      period: 300
      statistic: Average
      comparison: LessThanThreshold
      notifyEmail: alerts@gamedin.com
    - name: HighRequestCount
      metric: RequestCount
      threshold: 10000
      evaluationPeriods: 1
      period: 300
      statistic: Sum
      comparison: GreaterThanThreshold
      notifyEmail: alerts@gamedin.com
  dashboards:
    - name: GameDinPerformance
      widgets:
        - type: metric
          properties:
            metrics:
              - ['AWS/AmplifyHosting', '5XXError']
              - ['AWS/AmplifyHosting', '4XXError']
              - ['AWS/AmplifyHosting', 'Latency']
              - ['AWS/AmplifyHosting', 'Availability']
            period: 300
            stat: Average
            region: ${AWS_REGION}
            title: GameDin Performance Metrics
  logging:
    accessLogs:
      enabled: true
      retention: 90
    errorLogs:
      enabled: true
      retention: 90
    performanceLogs:
      enabled: true
      retention: 30

branches:
  main:
    framework: vite
    stage: production
    environmentVariables:
      - name: VITE_APP_ENV
        value: production
      - name: VITE_OPTIMIZATION_LEVEL
        value: ultra
      - name: VITE_PERFORMANCE_MONITORING
        value: true
      - name: VITE_ERROR_REPORTING
        value: true
      - name: VITE_ANALYTICS_ENABLED
        value: true
    cache:
      paths:
        - node_modules/**/*
        - frontend/node_modules/**/*
        - ~/.npm/**/*
        - .amplify/**/*
    build:
      commands:
        - cd frontend
        - npm ci --prefer-offline --no-audit
        - npm run build:production
        - npm run optimize:assets
    deploy:
      - type: cloudfront
        distributionId: ${CLOUDFRONT_DISTRIBUTION_ID}
        invalidatePaths: 
          - '/*'
          - '/index.html'
          - '/assets/*'
          - '/api/*'
      - type: s3
        bucket: ${DEPLOYMENT_BUCKET}
        path: /
    postDeploy:
      - npm run post-deploy:hooks
      - npm run notify:deployment
      - npm run health:check
      - npm run performance:audit

  develop:
    framework: vite
    stage: development
    environmentVariables:
      - name: VITE_APP_ENV
        value: development
      - name: VITE_OPTIMIZATION_LEVEL
        value: balanced
      - name: VITE_PERFORMANCE_MONITORING
        value: true
      - name: VITE_ERROR_REPORTING
        value: true
      - name: VITE_ANALYTICS_ENABLED
        value: false
    cache:
      paths:
        - node_modules/**/*
        - frontend/node_modules/**/*
        - ~/.npm/**/*
    build:
      commands:
        - cd frontend
        - npm ci --prefer-offline --no-audit
        - npm run build:development
    deploy:
      - type: s3
        bucket: ${DEV_DEPLOYMENT_BUCKET}
        path: /

  staging:
    framework: vite
    stage: staging
    environmentVariables:
      - name: VITE_APP_ENV
        value: staging
      - name: VITE_OPTIMIZATION_LEVEL
        value: high
      - name: VITE_PERFORMANCE_MONITORING
        value: true
      - name: VITE_ERROR_REPORTING
        value: true
      - name: VITE_ANALYTICS_ENABLED
        value: true
    cache:
      paths:
        - node_modules/**/*
        - frontend/node_modules/**/*
        - ~/.npm/**/*
    build:
      commands:
        - cd frontend
        - npm ci --prefer-offline --no-audit
        - npm run build:staging
    deploy:
      - type: s3
        bucket: ${STAGING_DEPLOYMENT_BUCKET}
        path: /

routingRules:
  - source: '</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|woff2|ttf|map|json|webp|avif)$)([^.]+$)/>'
    target: '/index.html'
    status: '200'
    condition: null
  - source: '/api/*'
    target: '/api/[api]'
    status: '200'
    condition: null
  - source: '/assets/*'
    target: '/assets/[asset]'
    status: '200'
    condition: null

functions:
  - name: optimizationEngine
    runtime: nodejs20.x
    handler: index.handler
    timeout: 30
    memorySize: 512
    environment:
      variables:
        OPTIMIZATION_LEVEL: ultra
        PERFORMANCE_MONITORING: true
    events:
      - http:
          path: /api/optimization
          method: post
          cors: true
    layers:
      - arn:aws:lambda:${AWS_REGION}:${AWS_ACCOUNT_ID}:layer:optimization-layer:1

  - name: performanceMonitor
    runtime: nodejs20.x
    handler: index.handler
    timeout: 60
    memorySize: 1024
    environment:
      variables:
        CLOUDWATCH_GROUP: /aws/amplify/gamedin/performance
        METRICS_NAMESPACE: GameDin/Performance
    events:
      - schedule:
          rate: rate(5 minutes)
    layers:
      - arn:aws:lambda:${AWS_REGION}:${AWS_ACCOUNT_ID}:layer:monitoring-layer:1

  - name: securityScanner
    runtime: nodejs20.x
    handler: index.handler
    timeout: 300
    memorySize: 2048
    environment:
      variables:
        SECURITY_SCAN_LEVEL: comprehensive
        VULNERABILITY_DB: latest
    events:
      - schedule:
          rate: rate(1 day)
    layers:
      - arn:aws:lambda:${AWS_REGION}:${AWS_ACCOUNT_ID}:layer:security-layer:1 